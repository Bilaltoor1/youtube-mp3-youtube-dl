services:
  # Frontend Service (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: yttmp3_frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://yttmp3.com/api
    volumes:
      - ./logs/frontend:/app/logs
    networks:
      - yttmp3_network
    depends_on:
      - backend

  # Backend Service (Flask API)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: yttmp3_backend
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
    volumes:
      - ./downloads:/app/downloads
      - ./logs/backend:/app/logs
    networks:
      - yttmp3_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: yttmp3_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./ssl-challenge:/var/www/certbot:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - yttmp3_network
    depends_on:
      - frontend
      - backend

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: yttmp3_certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./ssl-challenge:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email bilaltoor786786@gmail.com --agree-tos --no-eff-email -d yttmp3.com -d www.yttmp3.com
    networks:
      - yttmp3_network

networks:
  yttmp3_network:
    driver: bridge
